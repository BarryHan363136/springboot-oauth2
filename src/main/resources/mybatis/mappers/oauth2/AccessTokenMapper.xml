<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bmw.azure.oauth2.mapper.AccessTokenMapper" >
  <resultMap id="BaseResultMap" type="com.bmw.azure.oauth2.entity.AccessToken" >
    <result column="token_id" property="tokenId" jdbcType="VARCHAR" />
    <result column="authentication_id" property="authenticationId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="client_id" property="clientId" jdbcType="VARCHAR" />
    <result column="refresh_token" property="refreshToken" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.bmw.azure.oauth2.entity.AccessTokenWithBLOBs" extends="BaseResultMap" >
    <result column="token" property="token" jdbcType="LONGVARBINARY" />
    <result column="authentication" property="authentication" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Blob_Column_List" >
    token, authentication
  </sql>
  <insert id="insert" parameterType="com.bmw.azure.oauth2.entity.AccessTokenWithBLOBs" >
    insert into spark_access_token (token_id, authentication_id, user_id, 
      client_id, refresh_token, token, 
      authentication)
    values (#{tokenId,jdbcType=VARCHAR}, #{authenticationId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{clientId,jdbcType=VARCHAR}, #{refreshToken,jdbcType=VARCHAR}, #{token,jdbcType=LONGVARBINARY}, 
      #{authentication,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.bmw.azure.oauth2.entity.AccessTokenWithBLOBs" >
    insert into spark_access_token
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tokenId != null" >
        token_id,
      </if>
      <if test="authenticationId != null" >
        authentication_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="clientId != null" >
        client_id,
      </if>
      <if test="refreshToken != null" >
        refresh_token,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="authentication != null" >
        authentication,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tokenId != null" >
        #{tokenId,jdbcType=VARCHAR},
      </if>
      <if test="authenticationId != null" >
        #{authenticationId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="clientId != null" >
        #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="refreshToken != null" >
        #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=LONGVARBINARY},
      </if>
      <if test="authentication != null" >
        #{authentication,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
</mapper>